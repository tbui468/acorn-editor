Todo anytime
    Change EditorConfig variables screenrows and screencols to screen_rows and screen_cols for consistency
    Rename EditorConfig.row to EditorConfig.rows (since it's a point/array into all the rows)
    Weird bug when pressing 'Enter' when cursor is on first line of file
        When on first line only
        If x position is 0, it works fine
        otherwise there's a bug where the entire line is moved down and NOT just the string to the right of the cursor
    In editor_find_callback, the i in the for loop isn't being used... couldn't we just replace it with a loop using 'current'?


TODO:
    When user types after pressing escape button, terminal should respond immediately (have to wait right now)
        this will make the editor sooo much better to use!
    Add using ':' in command mode to open command in message bar (use editor_prompt(...)) to get user input
        :e [filename] to open buffer in new tab (how does deleting tabs work????)
        :b[number] to switch buffers

    'gg' to go to top of screen
    'G' to go to bottom of screen

    Add Acorn to path so that we can open it anywhere to edit text files
    Add ability to modify command mode commands with numbers (eg, jump more than a single row/col, delete more, etc)
    Add 'v' to start visual mode for highlighting
    Add 'V' to highlight entire row (but alos keep cursor on same x position)
    Make buffers open a new 'tab' in the top (:e [filename])
    Vim doesn't really using the status bar/message bar setup - just one bar that shows message when necessary
    add search in vim  /word_to_search_for
        use 'n' and 'N' to jump to next/previous match

    Vim style controls
        make the cursor blink as a block when in command mode (and as a line in insert mode) so that there' a visual queue of which mode we are in

    Bug with syntax highlighting:
        'if' in 'else if' is not highlighted
        numbers after 'return' statement are not highlighted
        numbers after 'case:' are not highlighted
        NULL in c should be highlighted same as numbers (orange)

    Remove tabs (render them as all spaces) - this should simplify our code by a bit (no more render array needed)
        would need to render all \t as spaces equal to ACORN_TAB_STOP
            but we don't ever check for \t directly - the entire line is just copied to the line
        could replace all \t with ACORN_TAB_STOP number of spaces in all lines on opening - it might be a bit slower
            but we could then remove all render + render_size from codebase

    Add network support to allow two people to edit file at the same time (super advanced stuff) (HARD)
        one person (main) would open the file, and the other person connects to the open file
        the main has the ability to write to file (read is allowed for everyone connected)
        Could be really useful for teacher/student coding sessions
        STEPS: Set up two basic apps that can send data to each other (one is server, and one is client)
            then integrate that with the editor app.  Might need to figure out if ports w/ tcp/ip work the same when using WSL
