Todo after done with tutorial
    Should convert all tabs to spaces - this will simplify code by a bit (render_x can be removed completely, including conversion functions to/from cursor_x)
        eg, get rid of render_x and just use cursor_x.
        do this after entire editor tutorial is done, and make sure to save it to version control before changing it
    Change theme to Oblivion/80s sci fi theme - add more colors and integrate them (EASY)
    Add vim style navigation (start with adding Insert/Command modes and allow navigation with hjkl) (MODERATE)
    Add tabs / multiple buffers (display filename or tab number on top) - this is easier than vim's :ls every time to see buffers (MODERATE)
    Add network support to allow two people to edit file at the same time (super advanced stuff) (HARD)
        one person (main) would open the file, and the other person connects to the open file
        the main has the ability to write to file (read is allowed for everyone connected)
        Could be really useful for teacher/student coding sessions
        STEPS: Set up two basic apps that can send data to each other (one is server, and one is client)
            then integrate that with the editor app.  Might need to figure out if ports w/ tcp/ip work the same when using WSL
    Add syntax highighting for Python (EASY)
    User can put cursor on line after end of file now, but vim doesn't allow that - make it like vim since I like it that way (EASY)

    Could draw squares and try to make pong or snake game run in terminal?  Would need to adjust width/height of characters
        Had this thought while laying in bed and not sleeping (just letting the mind wander)

Todo anytime
    Change EditorConfig variables screenrows and screencols to screen_rows and screen_cols for consistency
    Rename EditorConfig.row to EditorConfig.rows (since it's a point/array into all the rows)
    Weird bug when pressing 'Enter' when cursor is on first line of file
        When on first line only
        If x position is 0, it works fine
        otherwise there's a bug where the entire line is moved down and NOT just the string to the right of the cursor
    In editor_find_callback, the i in the for loop isn't being used... couldn't we just replace it with a loop using 'current'?


TODO:
    Python syntax - 'else' keyword doesn't get recognized because of ':' after it...
    Change theme to 80s sci fi (use oblivion theme colors for now)
    Remove tabs (render them as all spaces) - this should simplify our code by a bit (no more render array needed)
